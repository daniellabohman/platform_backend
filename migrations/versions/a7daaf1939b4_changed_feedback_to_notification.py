"""Changed Feedback to Notification

Revision ID: a7daaf1939b4
Revises: 974e48997abf
Create Date: 2025-04-08 13:00:03.188014

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'a7daaf1939b4'
down_revision = '974e48997abf'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('feedback')
    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('google_calendar_event_id', sa.String(length=255), nullable=True))

    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=False))
        batch_op.alter_column('id',
               existing_type=mysql.BIGINT(unsigned=True),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index('id')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.drop_column('due_date')

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=mysql.BIGINT(unsigned=True),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index('id')

    with op.batch_alter_table('subscriptions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('plan_name', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('stripe_subscription_id', sa.String(length=255), nullable=True))
        batch_op.alter_column('id',
               existing_type=mysql.BIGINT(unsigned=True),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('start_date',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('end_date',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.drop_index('id')
        batch_op.drop_column('plan_type')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('auth_token', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('stripe_customer_id', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('subscription_status', sa.String(length=50), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('subscription_status')
        batch_op.drop_column('stripe_customer_id')
        batch_op.drop_column('auth_token')

    with op.batch_alter_table('subscriptions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('plan_type', mysql.VARCHAR(length=50), nullable=False))
        batch_op.create_index('id', ['id'], unique=True)
        batch_op.alter_column('end_date',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('start_date',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=mysql.BIGINT(unsigned=True),
               existing_nullable=False,
               autoincrement=True)
        batch_op.drop_column('stripe_subscription_id')
        batch_op.drop_column('plan_name')

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.create_index('id', ['id'], unique=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=mysql.BIGINT(unsigned=True),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.add_column(sa.Column('due_date', mysql.TIMESTAMP(), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_index('id', ['id'], unique=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=mysql.BIGINT(unsigned=True),
               existing_nullable=False,
               autoincrement=True)
        batch_op.drop_column('user_id')

    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.drop_column('google_calendar_event_id')

    op.create_table('feedback',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('course_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rating', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('comment', mysql.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name='feedback_ibfk_2'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='feedback_ibfk_1'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    # ### end Alembic commands ###
